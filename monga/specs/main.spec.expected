
K_TYPE_VOID: void 
TK_ID: teste 
TK_TYPE_INT: int 
TK_ID: x 
TK_TYPE_INT: int 
TK_ID: y 
    
TK_ID: a  
K_NEW: new 
TK_ID: Space
    
TK_ID: x  
TK_ID: x  
TK_NUMBER: 1
    
K_RETURN: return 
TK_ID: x



TK_TYPE_INT: int 
TK_ID: quickort 
TK_TYPE_INT: int 
TK_ID: array 
TK_TYPE_INT: int 
TK_ID: length

    
TK_TYPE_INT: int 
TK_ID: middle  
TK_ID: length  
TK_NUMBER: 2
    
TK_TYPE_INT: int 
TK_ID: pivot  
TK_ID: array
TK_ID: middle

    
TK_ID: left  
TK_ID: partition 
TK_ID: array 
TK_ID: pivot 
TK_STRING: "lesser"
    
TK_ID: right  
TK_ID: partition 
TK_ID: array 
TK_ID: pivot 
TK_STRING: "greater"

    
K_RETURN: return 
TK_ID: join 
TK_ID: quickort 
TK_ID: left 
TK_ID: pivot 
TK_ID: quickort 
TK_ID: right



TK_TYPE_INT: int 
TK_ID: main 
TK_TYPE_INT: int 
TK_ID: argc 
K_TYPE_CHAR: char 
TK_ID: argv 
    
TK_TYPE_INT: int 
TK_ID: array  
TK_NUMBER: 0 
TK_NUMBER: 1 
TK_NUMBER: 2

    
TK_TYPE_INT: int 
TK_ID: a  
TK_NUMBER: 10
    
TK_TYPE_INT: int 
TK_ID: b  
TK_NUMBER: 100
    
TK_TYPE_INT: int 
TK_ID: d  
TK_HEXA: 0xF1
    
TK_TYPE_INT: int 
TK_ID: x  
TK_FLOAT: 1200000000.000000
    
TK_TYPE_INT: int 
TK_ID: d  
TK_FLOAT: 0.900000
    
TK_TYPE_INT: int 
TK_ID: y  
TK_FLOAT: 1.200000

    
TK_ID: a  
TK_NUMBER: 1
    
TK_ID: a  
TK_ID: a
    
TK_ID: a  
TK_NUMBER: 1  
TK_ID: a

    
TK_ID: b  
TK_ID: c  
TK_ID: b
    
TK_ID: b  
TK_ID: a  
TK_ID: b  
TK_ID: c  
TK_ID: b  
TK_ID: f

    
TK_ID: a  
TK_NUMBER: 1  
TK_NUMBER: 2  
TK_NUMBER: 2  
TK_NUMBER: 3

    
K_WHILE: while 
TK_NUMBER: 1  
TK_NUMBER: 2  
TK_ID: b  
TK_ID: x  
TK_NUMBER: 2 
        
TK_ID: printf 
TK_STRING: "%"
    


