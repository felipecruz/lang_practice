
Func Decl - Return Type: Void 
          - Paramenters Int y, Int x
   Assignment Var: a <- EXP: New Int [EXP: Const int: 10]
   Assignment Var: x <- EXP: Binary Exp EXP: Var: x EXP: Const int: 1
   Return EXP: Var: x 

Func Decl - Return Type: Int 
          - Paramenters Int length, Int[] array
   Var Decl Int Name middle 
   Var Decl Int Name pivot 
   Assignment Var: middle <- EXP: Binary Exp EXP: Var: length EXP: Const int: 2
   Assignment Var: pivot <- EXP: Var: array [EXP: Var: middle ]
   Assignment Var: left <- EXP: 
   Call: partition EXP: Var: array , EXP: Var: pivot , EXP: Const string: lesser
   Assignment Var: right <- EXP: 
   Call: partition EXP: Var: array , EXP: Var: pivot , EXP: Const string: greater
   Return EXP: 
   Call: join EXP: 
   Call: quickort EXP: Var: left , EXP: Var: pivot , EXP: 
   Call: quickort EXP: Var: right 

Func Decl - Return Type: Int 
          - Paramenters Char[] argv, Int argc
   Var Decl Int[] Name array 
   Assignment Var: a <- EXP: Const int: 10
   Assignment Var: b <- EXP: Const int: 100
   Assignment Var: d <- EXP: Const long: 241
   Assignment Var: x <- EXP: Const float: 1200000000.000000
   Assignment Var: d <- EXP: Const float: 0.900000
   Assignment Var: y <- EXP: Const float: 1.200000
   Assignment Var: a <- EXP: Const int: 1
   Assignment Var: x <- EXP: Binary Exp EXP: Var: a EXP: Var: a 
   Assignment Var: a <- EXP: Binary Exp EXP: Const int: 1EXP: Var: a 
   Assignment Var: b <- EXP: Binary Exp EXP: Var: c EXP: Var: b 
   Assignment Var: b <- EXP: Binary Exp EXP: Binary Exp EXP: Var: a EXP: Var: b EXP: Binary Exp EXP: Binary Exp EXP: Var: c EXP: Var: b EXP: Var: f 
   While EXP: Binary Exp EXP: Binary Exp EXP: Const int: 1EXP: Const int: 2EXP: Binary Exp EXP: Var: b EXP: Binary Exp EXP: Var: x EXP: Const int: 2
    Call: printf EXP: Const string: %
